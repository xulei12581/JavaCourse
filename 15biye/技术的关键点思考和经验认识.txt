

JVM（Java Virtual Machine）,俗称Java虚拟机,java语言平台无关性的核心思想
它是一个虚构出来的计算机，是通过在实际的计算机上仿真模拟各种计算机功能来实现的。
Java语言的一个非常重要的特点就是与平台的无关性
JVM的内部体系结构分为三部分:类装载器、运行时数据区、执行引擎
运行时数据区是JVM核心部分,而其中的堆部分又涉及到垃圾回收,基本上jvm出现的问题大部分都在
堆上,而垃圾回收又是在设计系统的时候需要考虑的问题
jvm包含以下几个部分:
1.jvm整体架构
2.java字节码
3.类加载器
4.内存模型
5.jvm使用
  (1)启动参数
  (2)jdk工具
6.GC与GC的分类以及jdk每个版本默认的GC
7.堆栈日志的分析以及jvm的调优


NIO
java.nio全称java non-blocking IO, 是指JDK1.4及以上版本里提供的新api为所有的原始类型(boolean类型除外)
提供缓存支持的数据容器，使用它可以提 供非阻塞式的高伸缩性网络,它在传统的IO(也就是BIO)的基础上把面向流的
方式改为面向缓冲区,把阻塞IO修改为非阻塞IO,以及增加了选择器

NIO的学习和使用包含以下几个部分
1.socket
2.I/O模型
3.NIO
  (1)通道
  (2)缓冲区
  (3)选择器
4.Netty
5.spring cloud gateway

并发编程
并发是一个处理器同时处理多个任务,一开始在操作系统的角色去设计,提高操作系统的性能,java在多线程
设计的这一块做了很多的优化,在cpu和缓存以及I/O这一块提供了很多的实现方式,但是也会出现很多安全性的问题,
包括可见性问题、有序性问题、活跃性问题、性能问题,在学习和使用的过程种要结合对应的业务去做设计,
总体上java的线程包含以下几个部分:
1.线程的创建方式以及线程的几种状态
2.锁以及锁的分类
3.线程池的使用
4.线程异常的处理


Spring 和 ORM 等框架
Spring是一个开放源代码的设计层面框架,Spring是一个分层的JavaSE/EE full-stack(一站式) 轻量级开源框架。
Spring 的理念：不去重新发明轮子。其核心是控制反转（IOC）和面向切面（AOP）

ORM 框架就是一种为了解决面向对象与关系型数据库中数据类型不匹配的技术，
它通过描述 Java 对象与数据库表之间的映射关系，自动将 Java 应用程序中的对象持久化到关系型数据库的表中。
ORM 框架是一种数据持久化技术，即在对象模型和关系型数据库之间建立起对应关系，并且提供一种机制，
可通过 JavaBean 对象操作数据库表中的数据

spring和ORM框架使用和学习包含以下几个部分:
1.spring框架体系
2.spring核心思想:IOC和AOP
3.spring xml配置原理
4.spring boot与spring boot starter
5.JDBC与数据库连接池
6.hibernate与mybatis
7.spring框架设计模式

MySQL 数据库和 SQL
SQL 扩展了结构化查询语言。SQL 是一种标准语言，使用户可以设计和管理数据库。
另一方面，MySQL 是一个关系数据库管理系统，允许用户存储和检索数据库中的数据。
MySQL 使用 SQL 对数据库执行特定的操作。MySQL 和 SQL 都提供两种流行且可区分的服务器，
即用于数据库管理的 MySQL server 和 SQL server
mysql与sql使用和学习包含以下几个部分:
1.数据库设计范式
2.SQL语言
3.mysql存储与执行流程
4.mysql索引
5.mysql事务与锁
6.mysql优化

分库分表
分库分表是为了解决单库单表业务数据量太大的问题,分库分表一般从两个方向去解决:垂直拆分与水平拆分
分库分表使用和学习包含以下几个部分:
1.垂直拆分 
2.水平拆分
3.主从复制
4.mysql读写分离与高可用
5.数据迁移


RPC 和微服务
RPC(Remote Procedure Call)：远程过程调用，它是一种通过网络从远程计算机程序上请求服务，
而不需要了解底层网络技术的思想,从RPC的基础上衍生了SOA与微服务,微服务实际上是一种架构模式,
将单一的应用程序分解为一组服务,服务与服务间采用轻量级的同学机制互相沟通(通畅采用Http+restful API),
RPC和微服务使用和学习包含以下几个部分:
1.RPC原理与技术框架
2.微服务注册与路由
3.spring架构体系与dubbo架构体系
4.微服务应用场景

分布式缓存
分布式缓存就是指在分布式环境或系统下，把一些热门数据存储到离用户近、离应用近的位置，
并尽量存储到更快的设备，以减少远程数据传输的延迟，让用户和应用可以很快访问到想要的数据
分布式缓存使用和学习包含以下几个部分:
1.本地缓存与远程缓存
2.缓存策略与缓存问题
3.redis与redis客户端
4.redis与spring整合
5.redis集群与高可用

分布式消息队列
消息队列中间件是分布式系统中重要的组件，主要解决应用耦合，异步消息，
流量削锋等问题。实现高性能，高可用，可伸缩和最终一致性架构
分布式消息队列使用和学习包含以下几个部分:
1.队列到消息服务
2.消息模式到消息协议
3.JMS
4.消息中间件
  (1)kafka
  (2)rabbitmq与rocketmq
  (3)Pulsar/EIP/Camel/Spring Integration